<?php

namespace Ebay\Sell\Marketing\Api;

use Ebay\Sell\Marketing\Model\Ad as AdModel;
use Ebay\Sell\Marketing\Model\AdIds as AdIds;
use Ebay\Sell\Marketing\Model\AdPagedCollection as AdPagedCollection;
use Ebay\Sell\Marketing\Model\AdReferences as AdReferences;
use Ebay\Sell\Marketing\Model\Ads as Ads;
use Ebay\Sell\Marketing\Model\BulkAdResponse as BulkAdResponse;
use Ebay\Sell\Marketing\Model\BulkCreateAdRequest as BulkCreateAdRequest;
use Ebay\Sell\Marketing\Model\BulkCreateAdsByInventoryReferenceRequest as BulkCreateAdsByInventoryReferenceRequest;
use Ebay\Sell\Marketing\Model\BulkCreateAdsByInventoryReferenceResponse as BulkCreateAdsByInventoryReferenceResponse;
use Ebay\Sell\Marketing\Model\BulkDeleteAdRequest as BulkDeleteAdRequest;
use Ebay\Sell\Marketing\Model\BulkDeleteAdResponse as BulkDeleteAdResponse;
use Ebay\Sell\Marketing\Model\BulkDeleteAdsByInventoryReferenceRequest as BulkDeleteAdsByInventoryReferenceRequest;
use Ebay\Sell\Marketing\Model\BulkDeleteAdsByInventoryReferenceResponse as BulkDeleteAdsByInventoryReferenceResponse;
use Ebay\Sell\Marketing\Model\CreateAdRequest as CreateAdRequest;
use Ebay\Sell\Marketing\Model\CreateAdsByInventoryReferenceRequest as CreateAdsByInventoryReferenceRequest;
use Ebay\Sell\Marketing\Model\DeleteAdsByInventoryReferenceRequest as DeleteAdsByInventoryReferenceRequest;
use Ebay\Sell\Marketing\Model\UpdateBidPercentageRequest as UpdateBidPercentageRequest;
use OpenAPI\Runtime\AbstractAPI as AbstractAPI;

class Ad extends AbstractAPI
{
    /**
     * This method adds multiple listings that are managed with the Inventory API to an
     * existing Promoted Listings campaign. For each listing specified in the request,
     * this method: Creates an ad for the listing. Sets the bid percentage (also known
     * as the ad rate) for the ad. Associates the ad with the specified campaign. To
     * create an ad for a listing, specify its inventoryReferenceId and
     * inventoryReferenceType, plus the bidPercentage for the ad in the payload of the
     * request. Specify the campaign to associate the ads to with using the campaign_id
     * path parameter. In the Inventory API, an inventory reference ID is either a
     * seller-defined SKU value or an inventoryItemGroupKey (a seller-defined ID for a
     * multiple-variation listing). You can specify a maximum of 500 items per call and
     * each campaign can have ads for a maximum of 50,000 items. Be aware when using
     * this call that each variation in a multiple-variation listing creates an
     * individual ad. Use createCampaign to create a new campaign and use getCampaigns
     * to get a list of existing campaigns.
     *
     * @param string                                   $campaign_id A unique eBay-assigned ID for an ad campaign that's
     *                                                              generated when a campaign is created. Get a seller's campaign IDs by calling
     *                                                              getCampaigns.
     * @param BulkCreateAdsByInventoryReferenceRequest $Model       The container for the
     *                                                              bulk request to create ads for eBay inventory reference IDs. eBay inventory
     *                                                              reference IDs are seller-defined IDs used by theInventory API.
     *
     * @return BulkCreateAdsByInventoryReferenceResponse
     */
    public function bulkCreatesByInventoryReference(string $campaign_id, BulkCreateAdsByInventoryReferenceRequest $Model): BulkCreateAdsByInventoryReferenceResponse
    {
        return $this->client->request('bulkCreateAdsByInventoryReference', 'POST', "ad_campaign/{$campaign_id}/bulk_create_ads_by_inventory_reference",
            [
                'json' => $Model->getArrayCopy(),
            ]
        );
    }

    /**
     * This method adds multiple listings to an existing Promoted Listings campaign
     * using listingId values generated by either the Trading API or Inventory API. For
     * each listing ID specified in the request, this method: Creates an ad for the
     * listing. Sets the bid percentage (also known as the ad rate) for the ad.
     * Associates the ad with the specified campaign. To create an ad for a listing,
     * specify its listingId, plus the bidPercentage for the ad in the payload of the
     * request. Specify the campaign to associate the ads with using the campaign_id
     * path parameter. Listing IDs are generated by eBay when a seller creates listings
     * with the Trading API. You can specify a maximum of 500 listings per call and
     * each campaign can have ads for a maximum of 50,000 items. Be aware when using
     * this call that each variation in a multiple-variation listing creates an
     * individual ad. Use createCampaign to create a new campaign and use getCampaigns
     * to get a list of existing campaigns.
     *
     * @param string              $campaign_id A unique eBay-assigned ID for an ad campaign that's
     *                                         generated when a campaign is created. Get a seller's campaign IDs by calling
     *                                         getCampaigns.
     * @param BulkCreateAdRequest $Model       The container for the bulk request to create
     *                                         ads for eBay listing IDs. eBay listing IDs are generated by the Trading API and
     *                                         Inventory API when the listing is created on eBay.
     *
     * @return BulkAdResponse
     */
    public function bulkCreatesByListingId(string $campaign_id, BulkCreateAdRequest $Model): BulkAdResponse
    {
        return $this->client->request('bulkCreateAdsByListingId', 'POST', "ad_campaign/{$campaign_id}/bulk_create_ads_by_listing_id",
            [
                'json' => $Model->getArrayCopy(),
            ]
        );
    }

    /**
     * This method works with listings created with the Inventory API. The method
     * deletes a set of ads, as specified by a list of inventory reference IDs, from
     * the specified campaign. Inventory reference IDs are seller-defined IDs that are
     * used with the Inventory API. Pass the campaign_id as a path parameter and
     * populate the payload with a list of inventoryReferenceId and
     * inventoryReferenceType pairs that you want to delete. Get the campaign IDs for a
     * seller by calling getCampaigns and call getAds to get a list of the seller's
     * inventory reference IDs.
     *
     * @param string                                   $campaign_id A unique eBay-assigned ID for an ad campaign that's
     *                                                              generated when a campaign is created. Get a seller's campaign IDs by calling
     *                                                              getCampaigns.
     * @param BulkDeleteAdsByInventoryReferenceRequest $Model       this request object
     *                                                              defines the fields for a bulkDeleteAdsByInventoryReference request
     *
     * @return BulkDeleteAdsByInventoryReferenceResponse
     */
    public function bulkDeletesByInventoryReference(string $campaign_id, BulkDeleteAdsByInventoryReferenceRequest $Model): BulkDeleteAdsByInventoryReferenceResponse
    {
        return $this->client->request('bulkDeleteAdsByInventoryReference', 'POST', "ad_campaign/{$campaign_id}/bulk_delete_ads_by_inventory_reference",
            [
                'json' => $Model->getArrayCopy(),
            ]
        );
    }

    /**
     * This method works with listing IDs created with either the Trading API or the
     * Inventory API. The method deletes a set of ads, as specified by a list of
     * listingID values from a Promoted Listings campaign. A listing ID value is
     * generated by eBay when a seller creates a listing with either the Trading API
     * and Inventory API. Pass the campaign_id as a path parameter and populate the
     * payload with the set of listing IDs that you want to delete. Get the campaign
     * IDs for a seller by calling getCampaigns and call getAds to get a list of the
     * seller's inventory reference IDs.
     *
     * @param string              $campaign_id A unique eBay-assigned ID for an ad campaign that's
     *                                         generated when a campaign is created. Get a seller's campaign IDs by calling
     *                                         getCampaigns.
     * @param BulkDeleteAdRequest $Model       this request object defines the fields for the
     *                                         bulkDeleteAdsByListingId request
     *
     * @return BulkDeleteAdResponse
     */
    public function bulkDeletesByListingId(string $campaign_id, BulkDeleteAdRequest $Model): BulkDeleteAdResponse
    {
        return $this->client->request('bulkDeleteAdsByListingId', 'POST', "ad_campaign/{$campaign_id}/bulk_delete_ads_by_listing_id",
            [
                'json' => $Model->getArrayCopy(),
            ]
        );
    }

    /**
     * This method works with listings that are managed with the Inventory API. The
     * method updates the bidPercentage values for a set of ads associated with the
     * specified campaign. Specify the campaign_id as a path parameter and supply a
     * list of inventoryReferenceId and inventoryReferenceType pairs with the updated
     * bidPercentage values in the request body. In the Inventory API, an inventory
     * reference ID is either a seller-defined SKU value or an inventoryItemGroupKey (a
     * seller-defined ID for a multiple-variation listing). Get the campaign IDs for a
     * seller by calling getCampaigns and call getAds to get a list of the seller's
     * inventory reference IDs.
     *
     * @param string                                   $campaign_id A unique eBay-assigned ID for an ad campaign that's
     *                                                              generated when a campaign is created. Get a seller's campaign IDs by calling
     *                                                              getCampaigns.
     * @param BulkCreateAdsByInventoryReferenceRequest $Model       this request object
     *                                                              defines the fields for the BulkCreateAdsByInventoryReference request
     *
     * @return BulkCreateAdsByInventoryReferenceResponse
     */
    public function bulkUpdatesBidByInventoryReference(string $campaign_id, BulkCreateAdsByInventoryReferenceRequest $Model): BulkCreateAdsByInventoryReferenceResponse
    {
        return $this->client->request('bulkUpdateAdsBidByInventoryReference', 'POST', "ad_campaign/{$campaign_id}/bulk_update_ads_bid_by_inventory_reference",
            [
                'json' => $Model->getArrayCopy(),
            ]
        );
    }

    /**
     * This method works with listings created with either the Trading API or the
     * Inventory API. The method updates the bidPercentage values for a set of ads
     * associated with the specified campaign. Specify the campaign_id as a path
     * parameter and supply a set of listing IDs with their associated updated
     * bidPercentage values in the request body. An eBay listing ID is generated when a
     * listing is created with the Trading API. Get the campaign IDs for a seller by
     * calling getCampaigns and call getAds to get a list of the seller's inventory
     * reference IDs.
     *
     * @param string              $campaign_id A unique eBay-assigned ID for an ad campaign that's
     *                                         generated when a campaign is created. Get a seller's campaign IDs by calling
     *                                         getCampaigns.
     * @param BulkCreateAdRequest $Model       this request object defines the fields for the
     *                                         BulkCreateAdsByListingId request
     *
     * @return BulkAdResponse
     */
    public function bulkUpdatesBidByListingId(string $campaign_id, BulkCreateAdRequest $Model): BulkAdResponse
    {
        return $this->client->request('bulkUpdateAdsBidByListingId', 'POST', "ad_campaign/{$campaign_id}/bulk_update_ads_bid_by_listing_id",
            [
                'json' => $Model->getArrayCopy(),
            ]
        );
    }

    /**
     * This method retrieves Promoted Listings ads that are associated with listings
     * created with either the Trading API or the Inventory API. The method retrieves
     * ads related to the specified campaign. Specify the Promoted Listings campaign to
     * target with the campaign_id path parameter. Because of the large number of
     * possible results, you can use query parameters to paginate the result set by
     * specifying a limit, which dictates how many ads to return on each page of the
     * response. You can also specify how many ads to skip in the result set before
     * returning the first result using the offset path parameter. Call getCampaigns to
     * retrieve the current campaign IDs for the seller.
     *
     * @param string $campaign_id A unique eBay-assigned ID for an ad campaign that's
     *                            generated when a campaign is created. Get a seller's campaign IDs by calling
     *                            getCampaigns.
     * @param array  $queries     options:
     *                            'limit'	string	Specifies the maximum number of ads to return on a page in the
     *                            paginated response. Default: 10 Maximum: 500
     *                            'listing_ids'	string	A comma separated list of listing IDs. The response
     *                            includes only active ads (ads associated with a RUNNING campaign). The results
     *                            do not include listing IDs that are excluded by other conditions.
     *                            'offset'	string	Specifies the number of ads to skip in the result set before
     *                            returning the first ad in the paginated response. Combine offset with the limit
     *                            query parameter to control the items returned in the response. For example, if
     *                            you supply an offset of 0 and a limit of 10, the first page of the response
     *                            contains the first 10 items from the complete list of items retrieved by the
     *                            call. If offset is 10 and limit is 20, the first page of the response contains
     *                            items 11-30 from the complete result set. Default: 0
     *
     * @return AdPagedCollection
     */
    public function gets(string $campaign_id, array $queries = []): AdPagedCollection
    {
        return $this->client->request('getAds', 'GET', "ad_campaign/{$campaign_id}/ad",
            [
                'query' => $queries,
            ]
        );
    }

    /**
     * This method works with listings created with either the Trading API or the
     * Inventory API. The method: Creates an ad for the specified listing ID. Sets the
     * bid percentage (also known as the &quot;ad rate&quot;) for the ad. Associates
     * the ad with the specified campaign. To create an ad for a listing, specify its
     * listingId, plus the bidPercentage for the ad in the payload of the request.
     * Specify the campaign to associate the ad with using the campaign_id path
     * parameter. Listing IDs are generated by eBay when a seller creates listings with
     * the Trading API or Inventory API. Each campaign can have ads for a maximum of
     * 50,000 items, and each item in a multiple-variation listing is considered as an
     * single item. Use createCampaign to create a new campaign and use getCampaigns to
     * get a list of existing campaigns.
     *
     * @param string          $campaign_id A unique eBay-assigned ID for an ad campaign that's
     *                                     generated when a campaign is created. Get a seller's campaign IDs by calling
     *                                     getCampaigns.
     * @param CreateAdRequest $Model       this request object defines the fields used in the
     *                                     createAdByListingId request
     *
     * @return object
     */
    public function createByListingId(string $campaign_id, CreateAdRequest $Model): object
    {
        return $this->client->request('createAdByListingId', 'POST', "ad_campaign/{$campaign_id}/ad",
            [
                'json' => $Model->getArrayCopy(),
            ]
        );
    }

    /**
     * This method works with listings that are managed with the Inventory API. The
     * method: Creates an ad for the specified listing. Sets the bid percentage (also
     * known as the &quot;ad rate&quot;) for the ad. Associates the ad with the
     * specified campaign. To create an ad for a listing, specify its
     * inventoryReferenceId and inventoryReferenceType, plus the bidPercentage for the
     * ad in the payload of the request. Specify the campaign to associate the ad with
     * using the campaign_id path parameter. In the Inventory API, an inventory
     * reference ID is either a seller-defined SKU value or an inventoryItemGroupKey (a
     * seller-defined ID for a multiple-variation listing). Each campaign can have ads
     * for a maximum of 50,000 items, and each item in a multiple-variation listing is
     * considered as an individual item. Use createCampaign to create a new campaign
     * and use getCampaigns to get a list of existing campaigns.
     *
     * @param string                               $campaign_id A unique eBay-assigned ID for an ad campaign that's
     *                                                          generated when a campaign is created. Get a seller's campaign IDs by calling
     *                                                          getCampaigns.
     * @param CreateAdsByInventoryReferenceRequest $Model       this request object defines
     *                                                          the fields used in the createAdsByInventoryReference request
     *
     * @return AdReferences
     */
    public function createsByInventoryReference(string $campaign_id, CreateAdsByInventoryReferenceRequest $Model): AdReferences
    {
        return $this->client->request('createAdsByInventoryReference', 'POST', "ad_campaign/{$campaign_id}/create_ads_by_inventory_reference",
            [
                'json' => $Model->getArrayCopy(),
            ]
        );
    }

    /**
     * This method retrieves the specified ad from the specified campaign. In the
     * request, supply the campaign_id and ad_id as path parameters. Call getCampaigns
     * to retrieve a list of the seller's current campaign IDs and call getAds to
     * retrieve their current ad IDs.
     *
     * @param string $ad_id       Identifier of an ad. This ID was generated when the ad was
     *                            created.
     * @param string $campaign_id A unique eBay-assigned ID for an ad campaign that's
     *                            generated when a campaign is created. Get a seller's campaign IDs by calling
     *                            getCampaigns.
     *
     * @return AdModel
     */
    public function get(string $ad_id, string $campaign_id): AdModel
    {
        return $this->client->request('getAd', 'GET', "ad_campaign/{$campaign_id}/ad/{$ad_id}",
            [
            ]
        );
    }

    /**
     * This method removes the specified ad from the specified campaign. Pass the ID of
     * the ad to delete with the ID of the campaign associated with the ad as path
     * parameters to the call. Call getCampaigns to get the current list of the
     * seller's campaign IDs.
     *
     * @param string $ad_id       Identifier of an ad. This ID was generated when the ad was
     *                            created.
     * @param string $campaign_id A unique eBay-assigned ID for an ad campaign that's
     *                            generated when a campaign is created. Get a seller's campaign IDs by calling
     *                            getCampaigns.
     *
     * @return mixed
     */
    public function delete(string $ad_id, string $campaign_id)
    {
        return $this->client->request('deleteAd', 'DELETE', "ad_campaign/{$campaign_id}/ad/{$ad_id}",
            [
            ]
        );
    }

    /**
     * This method works with listings that are managed with the Inventory API. The
     * method deletes ads using a list of seller-defined inventory reference IDs, used
     * with the Inventory API, that are associated with the specified campaign ID.
     * Specify the campaign ID (as a path parameter) and a list of inventoryReferenceId
     * and inventoryReferenceType pairs to be deleted. Call getCampaigns to get a list
     * of the seller's current campaign IDs.
     *
     * @param string                               $campaign_id A unique eBay-assigned ID for an ad campaign that's
     *                                                          generated when a campaign is created. Get a seller's campaign IDs by calling
     *                                                          getCampaigns.
     * @param DeleteAdsByInventoryReferenceRequest $Model       this request object defines
     *                                                          the fields for the deleteAdsByInventoryReference request
     *
     * @return AdIds
     */
    public function deletesByInventoryReference(string $campaign_id, DeleteAdsByInventoryReferenceRequest $Model): AdIds
    {
        return $this->client->request('deleteAdsByInventoryReference', 'POST', "ad_campaign/{$campaign_id}/delete_ads_by_inventory_reference",
            [
                'json' => $Model->getArrayCopy(),
            ]
        );
    }

    /**
     * This method retrieves Promoted Listings ads associated with listings that are
     * managed with the Inventory API from the specified campaign. Supply the
     * campaign_id as a path parameter and use query parameters to specify the
     * inventory_reference_id and inventory_reference_type pairs. In the Inventory API,
     * an inventory reference ID is either a seller-defined SKU value or an
     * inventoryItemGroupKey (a seller-defined ID for an inventory item group, which is
     * an entity that's used in the Inventory API to create a multiple-variation
     * listing). To indicate a listing managed by the Inventory API, you must always
     * specify both an inventory_reference_id and the associated
     * inventory_reference_type. Call getCampaigns to retrieve all of the seller's the
     * current campaign IDs.
     *
     * @param string $campaign_id A unique eBay-assigned ID for an ad campaign that's
     *                            generated when a campaign is created. Get a seller's campaign IDs by calling
     *                            getCampaigns.
     * @param array  $queries     options:
     *                            'inventory_reference_id'	string	The inventory reference ID associated with the
     *                            ad you want returned. A seller's inventory reference ID is the ID of either a
     *                            listing or the ID of an inventory item group (the parent of a multi-variation
     *                            listing, such as a shirt that is available in multiple sizes and colors). You
     *                            must always supply in both an inventory_reference_id and an
     *                            inventory_reference_type.
     *                            'inventory_reference_type'	string	The type of the inventory reference ID. Set
     *                            this value to either INVENTORY_ITEM (a single listing) or INVENTORY_ITEM_GROUP
     *                            (a multi-variation listing). You must always pass in both an
     *                            inventory_reference_id and an inventory_reference_type.
     *
     * @return Ads
     */
    public function getsByInventoryReference(string $campaign_id, array $queries = []): Ads
    {
        return $this->client->request('getAdsByInventoryReference', 'GET', "ad_campaign/{$campaign_id}/get_ads_by_inventory_reference",
            [
                'query' => $queries,
            ]
        );
    }

    /**
     * This method updates the bid percentage (also known as the &quot;ad rate&quot;)
     * for the specified ad in the specified campaign. In the request, supply the
     * campaign_id and ad_id as path parameters, and supply the new bidPercentage value
     * in the payload of the call. Call getCampaigns to retrieve a seller's current
     * campaign IDs and call getAds to get their ad IDs.
     *
     * @param string                     $ad_id       a unique eBay-assigned ID for an ad that's generated when
     *                                                an ad is created
     * @param string                     $campaign_id A unique eBay-assigned ID for an ad campaign that's
     *                                                generated when a campaign is created. Get a seller's campaign IDs by calling
     *                                                getCampaigns.
     * @param UpdateBidPercentageRequest $Model       this type defines the fields for the
     *                                                updateBid request
     *
     * @return mixed
     */
    public function updateBid(string $ad_id, string $campaign_id, UpdateBidPercentageRequest $Model)
    {
        return $this->client->request('updateBid', 'POST', "ad_campaign/{$campaign_id}/ad/{$ad_id}/update_bid",
            [
                'json' => $Model->getArrayCopy(),
            ]
        );
    }
}
